[
  {
    "_id": "_design/indexes",
    "language": "query",
    "views": {
      "class_name": {
        "map": {
          "fields": {
            "class_name": "asc"
          },
          "partial_filter_selector": {}
        },
        "reduce": "_count",
        "options": {
          "def": {
            "fields": [
              "class_name"
            ]
          }
        }
      },
      "class_name,patient.ref": {
        "map": {
          "fields": {
            "class_name": "asc",
            "patient.ref": "asc"
          },
          "partial_filter_selector": {
            "class_name": "doc.laboratoryAnalyzes"
          }
        },
        "reduce": "_count",
        "options": {
          "def": {
            "fields": [
              "class_name",
              "patient.ref"
            ]
          }
        }
      },
      "class_name,ownerOfObject.ref": {
        "map": {
          "fields": {
            "class_name": "asc",
            "patient.ref": "asc"
          },
          "partial_filter_selector": {
            "class_name": "cat.insurancePolicies"
          }
        },
        "reduce": "_count",
        "options": {
          "def": {
            "fields": [
              "class_name",
              "ownerOfObject.ref"
            ]
          }
        }
      }
    }
  },
  {
    "_id": "_design/ddoc",
    "views": {
      "patientLoginPassword": {
        "map": "function(doc) {\n  if (doc.class_name === 'cat.patients') {\n    doc.contactInformation.forEach(function(contact) {\n      if(contact.kind.presentation === 'Телефон') emit([contact.phoneNumber, doc.password], doc);\n      if(contact.kind.presentation === 'E-mail') emit([contact.emailAddress, doc.password], doc);\n    });\n  }\n}"
      },
      "statusesOfAnalysis": {
        "map": "function (doc) {\n  if(doc.class_name === 'ireg.statusesOfAnalysis') {\n    emit([doc.document.ref, doc.stringGUID], {stringGUID: doc.stringGUID, period: doc.period, status: doc.status.name});\n  }\n}",
        "reduce": "function (keys, values, rereduce) {\n  var latestDoc = {};\n  latestDoc.period = \"0000-00-00T00:00:00\";\n  values.forEach(function(doc){\n    if(doc.period > latestDoc.period) {\n      latestDoc = doc;\n    }\n  });\n  return latestDoc;\n}"
      }
    },
    "updates": {
      "updateAgreements": "function(doc, req) {\n  var allowedKeys = ['agreementOfSendingOtherInformation', 'agreementOfSendingResults'];\n  if (!doc) return [null, {\n    'code': 200,\n    'json': {\n      'error': 'missed doc',\n      'reason': 'no document to update'\n    }\n  }];\n  if (!req.body) return [null, {\n    'code': 200,\n    'json': {\n      'error': 'missed body',\n      'reason': 'no request body to update'\n    }\n  }];\n  var body = JSON.parse(req.body);\n  var isChanged = false;\n  Object.keys(body).forEach(function(key) {\n    if (allowedKeys.indexOf(key) !== -1 && doc[key] !== body[key]) {\n      isChanged = true;\n      doc[key] = body[key];\n    }\n  });\n  if (!isChanged) return [null, '{ \"ok\": true }'];\n  return [doc, '{ \"ok\": true }'];\n}"
    },
    "language": "javascript"
  }
]